openapi: 3.0.1
info:
  title: E-commerce API
  description: API documentation E-commerce project
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /api/products:
    get:
      summary: Get all products
      description: Retrieve a list of all products.
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of products to return.
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number.
        - in: query
          name: query
          schema:
            type: string
          description: Query string to filter products.
        - in: query
          name: sort
          schema:
            type: integer
            default: 1
          description: Sort order.
      responses:
        200:
          description: A list of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        500:
          description: Error retrieving products.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add a new product
      description: Create a new product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        200:
          description: The created product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Error creating product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      description: Retrieve a product by its ID.
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      responses:
        200:
          description: The requested product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Error retrieving product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a product
      description: Update an existing product by its ID.
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        200:
          description: The updated product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Error updating product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a product
      description: Delete a product by its ID.
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      responses:
        200:
          description: The deleted product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        500:
          description: Error deleting product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/products/mock:
    get:
      summary: Get mock products
      description: Retrieve a list of 100 mock products.
      responses:
        200:
          description: A list of mock products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Product ID.
        name:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        price:
          type: number
          description: Product price.
        category:
          type: string
          description: Product category.
    ProductInput:
      type: object
      properties:
        name:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        price:
          type: number
          description: Product price.
        category:
          type: string
          description: Product category.
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
