openapi: 3.0.1
info:
  title: E-commerce API
  description: API documentation E-commerce project
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /api/carts:
    post:
      summary: Create a new cart
      description: Create a new shopping cart.
      responses:
        200:
          description: The created cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error creating cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{cid}:
    get:
      summary: Get cart products
      description: Retrieve all products in a cart by cart ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
      responses:
        200:
          description: A list of products in the cart.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: Error retrieving cart products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete all products from cart
      description: Delete all products from a cart by cart ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
      responses:
        200:
          description: The cart with all products removed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error deleting products from cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{cid}/products/{pid}:
    post:
      summary: Add a product to cart
      description: Add a product to a cart by cart ID and product ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: Quantity of the product to add.
      responses:
        200:
          description: The updated cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error adding product to cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a product from cart
      description: Delete a product from a cart by cart ID and product ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      responses:
        200:
          description: The updated cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error deleting product from cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{cid}/products/{pid}/quantity:
    put:
      summary: Update product quantity in cart
      description: Update the quantity of a product in a cart by cart ID and product ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: Product ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: New quantity of the product.
      responses:
        200:
          description: The updated cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        500:
          description: Error updating product quantity in cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{cid}/purchase:
    post:
      summary: Purchase cart
      description: Purchase all products in a cart by cart ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: Cart ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                purchaser:
                  type: string
                  description: Email of the purchaser.
      responses:
        200:
          description: The purchase ticket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        500:
          description: Error purchasing cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          description: Cart ID.
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        id:
          type: string
          description: Product ID.
        name:
          type: string
          description: Product name.
        description:
          type: string
          description: Product description.
        price:
          type: number
          description: Product price.
        category:
          type: string
          description: Product category.
    Ticket:
      type: object
      properties:
        id:
          type: string
          description: Ticket ID.
        amount:
          type: number
          description: Total amount.
        purchaser:
          type: string
          description: Purchaser's email.
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string